// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vehicle {
  id            String    @id @default(cuid())
  stockNumber   String    @unique
  make          String
  model         String
  year          Int
  price         Float
  mileage       Int
  transmission  String
  exteriorColor String
  status        Status    @default(AVAILABLE)
  description   String?
  images        String[]  // Array of image URLs
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  testDrives    TestDrive[]
  soldDate  DateTime?
  soldPrice Decimal?
}

model TestDrive {
  id           String    @id @default(cuid())
  vehicle      Vehicle   @relation(fields: [vehicleId], references: [id])
  vehicleId    String
  customer     Customer? @relation(fields: [customerId], references: [id])  // Add this line
  customerId   String?   // Add this line - optional since not all test drives might have a customer
  customerName String
  email        String
  phone        String
  date         DateTime
  time         String
  status       AppointmentStatus @default(PENDING)
  source       String?
  notes        String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  reminderSent Boolean   @default(false)
  cancellationReason String?
}


model Customer {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  testDrives TestDrive[]
}

model BlockedTimeSlot {
  id        String   @id @default(cuid())
  date      DateTime
  startTime String
  endTime   String
  reason    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
  read      Boolean  @default(false)
}

enum Role {
  ADMIN
  SUPERADMIN
}

enum Status {
  AVAILABLE
  SOLD
  RESERVED
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model MonthlyMetric {
  id                    String   @id @default(cuid())
  month                 DateTime
  totalAppointments     Int
  websiteAppointments   Int
  otherAppointments     Int
  totalVehiclesSold     Int
  websiteDriveSales     Int
  otherSourceSales      Int
  totalRevenue          Decimal
  cancelledAppointments Int
  createdAt             DateTime @default(now())
}